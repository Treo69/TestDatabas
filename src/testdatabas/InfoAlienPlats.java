
package testdatabas;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;


public class InfoAlienPlats extends javax.swing.JFrame {

    private InfDB idb;
    
    public InfoAlienPlats(InfDB idb) {
        initComponents();
        this.idb=idb;
        fyllCbAlienPlats();
    }
    
    
    private void fyllCbAlienPlats() {
        
        String fraga = "SELECT Benamning FROM Plats";
        
        ArrayList<String> allaPlatser;
        
        try {
            
            allaPlatser = idb.fetchColumn(fraga);
            
            for (String Benamning : allaPlatser) {
                cbPlats.addItem(Benamning);
                
            }
            
        }
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Databasfel!");
            System.out.println("Internt felmeddelande " + e.getMessage());
            
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande " + e.getMessage());
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbPlats = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaInfo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 350));

        jLabel1.setText("Info om aliens på en viss plats");

        cbPlats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Välj Plats" }));
        cbPlats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPlatsActionPerformed(evt);
            }
        });

        txtAreaInfo.setColumns(20);
        txtAreaInfo.setRows(5);
        jScrollPane1.setViewportView(txtAreaInfo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cbPlats, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addComponent(cbPlats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbPlatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPlatsActionPerformed
        
        txtAreaInfo.setText("");
        
        ArrayList<HashMap<String,String>> soktaAliens;
        
        try {
            String valdPlats = cbPlats.getSelectedItem().toString();
            String fraga = "SELECT Alien_ID, Namn, Telefon, Losenord, Ansvarig_agent FROM alien JOIN plats ON alien.`Plats`=plats.`Plats_ID` WHERE Benamning='" + valdPlats + "'";
            soktaAliens = idb.fetchRows(fraga);
            
            for (HashMap<String, String> alien : soktaAliens) {
                
                txtAreaInfo.append(alien.get("Alien_ID") + "\t");
                txtAreaInfo.append(" " + alien.get("Namn") + "\t");
                txtAreaInfo.append(" " + alien.get("Telefon") + "\t");
                txtAreaInfo.append(" " + alien.get("Losenord") + "\t");
                txtAreaInfo.append(" " + alien.get("Ansvarig_agent") + "\n");
            }
        
        }
        catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Databasfel!");
            System.out.println("Internt felmeddelande " + e.getMessage());
        }
        
    }//GEN-LAST:event_cbPlatsActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbPlats;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaInfo;
    // End of variables declaration//GEN-END:variables
}
